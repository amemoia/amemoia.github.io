---
const charLink = "https://eu.finalfantasyxiv.com/lodestone/character/46616687/";
const world = "âœ¿ Phoenix (Light)";
const msq = "Post-Dawntrail"

const jobs = {
    viper: "100",
    pictomancer: "100",
    redmage: "90",
    bard: "90",
    reaper: "90",
    samurai: "80",
    whitemage: "50",
    warrior: "40"
};

const healers =  ["whitemage", "scholar", "astrologian", "sage"];
const tanks   =  ["paladin", "warrior", "dark knight", "gunbreaker"];


import bocchiPlate from "../img/sites/bocchi-newplate.png";
import bocchiRender from "../img/sites/bocchi-render.jpg";

import LayoutBase from "../components/LayoutBase.astro";
import Container from "../components/Container.astro";
import ContSection from "../components/ContSection.astro";
import { Image } from "astro:assets";
import '../styles/ffxiv.css';
import ContTitle from "../components/ContTitle.astro";
const pageTitle = "ame / ffxiv"
const description = "buh"
// it turns out lodestone character images have a static url
const lodestoneUrl = "https://img2.finalfantasyxiv.com/f/64b19500c983d0191dadd6a9dbf9d9fe_5047bc596a4bab2dc7f7c120bb22dec5fl0.jpg?1755017723";
---

<LayoutBase pageTitle={pageTitle}>
    <div class="ffxiv-divplate">
        <Image
            src={bocchiPlate}
            alt="B'occhi Rhock's Adventurer Plate"
            class="ffxiv-advplate"
            loading="eager"
        />
    </div>

    <Container args="container-color-blue">
        <ContTitle>
            <h3 class="subheader">{world}</h3>
            <h1><a href={charLink} target="_blank" class="accent-none">B'occhi Rhock</a></h1>
        </ContTitle>
        <ContSection>
            <div class="ffxiv-characterinfo flex row" style="gap: 2em; margin-top: 0.5em;">
                <Image
                    src={lodestoneUrl}
                    alt="A render of B'occhi Rhock"
                    class="ffxiv-render"
                    inferSize={true}
                />
                <div class="ffxiv-infopanel flex col" style="gap: 0.5em;">
                    <div>
                        <h3>Free Company</h3>
                        <p>None</p>
                    </div>
                    <div>
                        <h3>MSQ Progress</h3>
                        <p>{msq}</p>
                    </div>
                <div>
                    <h3>Main Jobs</h3>
                    <div class="ffxiv-jobs-container flex col">
                        <script define:vars={{ jobs, healers, tanks }}>
                            const jobDivTank = document.createElement("div");
                            jobDivTank.classList.add("ffxiv-jobs", "flex", "row", "ffxiv-jobs-tank");
                            const jobDivHealer = document.createElement("div");
                            jobDivHealer.classList.add("ffxiv-jobs", "flex", "row", "ffxiv-jobs-healer");
                            const jobDivDps = document.createElement("div");
                            jobDivDps.classList.add("ffxiv-jobs", "flex", "row", "ffxiv-jobs-dps");
                            const mainDiv = document.getElementsByClassName("ffxiv-jobs-container")[0];
                            for (const [jobname, level] of Object.entries(jobs)) {
                                const classjob = document.createElement("div");
                                classjob.classList.add("classjob");
                                const img = document.createElement("img");
                                img.src =
                                    "/resources/classjob/" + jobname + ".png";
                                img.classList.add("ffxiv-jobicon");
                                const span = document.createElement("span");
                                span.innerHTML = level;
                                if (healers.includes(jobname)) { classjob.classList.add("classjob-healer"); jobDivHealer.appendChild(classjob); }
                                else if (tanks.includes(jobname)) { classjob.classList.add("classjob-tank"); jobDivTank.appendChild(classjob); }
                                else {classjob.classList.add("classjob-dps"); jobDivDps.appendChild(classjob); }
                                classjob.appendChild(img);
                                classjob.appendChild(span);
                            }
                            mainDiv.appendChild(jobDivDps);
                            mainDiv.appendChild(jobDivTank);
                            mainDiv.appendChild(jobDivHealer);
                        </script>
                    </div>
                </div>
                </div>
            </div>
        </ContSection>
    </Container>
</LayoutBase>